(defn not= (& args)
  (not (apply = args)))

(defn empty? (x)
  (or (= x ()) (= x (list)) (= x "")))

(defn non-empty? (x) (not (empty? x)))

(defn if (true? then else)
  (cond
   true? then
   true else))

(defn is-even? (x) (= 0 (% x 2)))

(defn filter (in? l)
  (cond
   (empty? l) ()
   (in? (head l)) (cons
                   (head l)
                   (filter in? (tail l)))
   true (filter in? (tail l))))

